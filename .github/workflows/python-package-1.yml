name: CI build 1 - (Ubuntu)
on:
  schedule:
    - cron: "14 */2 * * *"
  push:
    branches: [ master ]
  pull_request:
    branches:
  workflow_dispatch:
    branches:

jobs:
  build:

    env:
      PY_COLORS: "1"
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.13"]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set Locale
      run: |
        sudo apt-get install tzdata locales -y && sudo locale-gen en_US.UTF-8
        sudo localectl set-locale LANG="en_US.UTF-8"
        export LANG="en_US.UTF-8"
        sudo update-locale
        locale -a
        locale
        locale -c -k LC_NUMERIC
        localectl status
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade pip
        pip install --upgrade wheel
        pip install -r requirements.txt
        pip install --upgrade pyautogui
        pip install --upgrade python-xlib
    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are flake8 issues
        flake8 . --count --show-source --statistics --exclude=temp
    - name: Install Chrome
      if: matrix.os == 'ubuntu-20.04'
      run: |
        sudo apt install google-chrome-stable
    - name: Check the console scripts interface
      run: |
        seleniumbase
        sbase
    - name: Install chromedriver
      run: |
        seleniumbase install chromedriver
    - name: Make sure pytest is working
      run: |
        echo "def test_1(): pass" > nothing.py
        pytest nothing.py --uc
    - name: Check which Chrome binaries exist
      run: |
        python -c "import os; print(os.path.exists('/usr/bin/google-chrome'))"
        python -c "import os; print(os.path.exists('/bin/google-chrome-stable'))"
        python -c "import os; print(os.path.exists('/bin/chromium-browser'))"
        python -c "import os; print(os.path.exists('/bin/chromium'))"
    - name: Display Chrome binary that's used
      run: |
        python -c "from seleniumbase.core import detect_b_ver; print(detect_b_ver.get_binary_location('google-chrome'))"
        python -c "from seleniumbase import undetected; print(undetected.find_chrome_executable())"
    #- name: Run python test_user_agent.py
    #  run: |
    #    python test_user_agent.py
    - name: Run python raw_uc_mode.py --debug
      run: |
        python raw_uc_mode.py --debug
    - name: Run python raw_cdp.py --debug
      run: |
        python raw_cdp.py --debug
    - name: Run python raw_socialblade.py --debug
      run: |
        python raw_socialblade.py --debug
    - name: Run python raw_gitlab_uc.py --debug
      run: |
        python raw_gitlab_uc.py --debug
    #- name: Run python raw_demo_script.py
    #  run: |
    #    python raw_demo_script.py
    - name: Run python raw_cdp_drivers.py
      run: |
        python raw_cdp_drivers.py
    - name: Run python raw_turnstile.py
      run: |
        python raw_turnstile.py --debug
    - name: Run python raw_upwork.py
      run: |
        python raw_upwork.py --debug
    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      with:
        name: seleniumbase-screenshots
        path: |
          ./latest_logs/
